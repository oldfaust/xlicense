#!/usr/bin/php
<?php
    $rb_script = 'xappldr.rb';
    $class_file = 'xappldr.class';
    if (!file_exists($rb_script)) {
        echo 'Error: Script file "' . $rb_script . '" not found!' . PHP_EOL;
        return;
    }
    //
    // Set the version variable
    //
    $modified = false;
    $lines = file($rb_script);
    foreach($lines as $idx => $line) {
        if ($line == ('# V ='. PHP_EOL)) {
            $dt = date('YmdHis');
            $git = trim(shell_exec('git rev-parse HEAD 2>/dev/null'));
            $ver = '"' . $dt . '-' . $git . '"' . PHP_EOL;
            // Replace the line
            $lines[$idx] = ('V = ' . $ver);
            $modified = true;
            break;
        }
    }
    if ($modified !== true) {
        echo 'Error: Invalid script file "' . $rb_script . 
            '". Version placeholder not found!' . PHP_EOL;
        return;
    }
    //
    // Compile/produce the .class file
    //
    $tmp_script = '___' . $rb_script . '___';
    $tmp_class = '___' . $rb_script . '___.class';
    file_put_contents($tmp_script, $lines);
    $output  = [];
    $ret_code = 0;
    $compile_cmd = 'jrubyc ' . $tmp_script . ' 2>&1';
    exec($compile_cmd, $output, $ret_code);
    if ($ret_code !== 0) {
        echo 'Error: Failed to compile the script file "' . $rb_script . 
            '"!' . PHP_EOL;
        echo implode(PHP_EOL, $output);
        return;    
    }
    unlink($tmp_script);
    if (rename($tmp_class, $class_file) !== true) {
        echo 'Error: Failed to produce the final .class file!' . PHP_EOL;
        return;
    }
    echo "Success: Compilation finished!" . PHP_EOL;
?>
